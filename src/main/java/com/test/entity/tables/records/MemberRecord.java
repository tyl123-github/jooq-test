/*
 * This file is generated by jOOQ.
 */
package com.test.entity.tables.records;


import com.test.entity.tables.Member;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> implements Record7<Integer, String, String, String, Byte, Double, LocalDateTime> {

    private static final long serialVersionUID = -1452137440;

    /**
     * Setter for <code>test.member.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.member.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.member.regName</code>.
     */
    public void setRegname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.member.regName</code>.
     */
    public String getRegname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.member.pwd</code>.
     */
    public void setPwd(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.member.pwd</code>.
     */
    public String getPwd() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.member.mobilephone</code>.
     */
    public void setMobilephone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.member.mobilephone</code>.
     */
    public String getMobilephone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.member.type</code>.
     */
    public void setType(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.member.type</code>.
     */
    public Byte getType() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>test.member.leaveAmount</code>.
     */
    public void setLeaveamount(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.member.leaveAmount</code>.
     */
    public Double getLeaveamount() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>test.member.regTime</code>.
     */
    public void setRegtime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>test.member.regTime</code>.
     */
    public LocalDateTime getRegtime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, Byte, Double, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, Byte, Double, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Member.MEMBER.ID;
    }

    @Override
    public Field<String> field2() {
        return Member.MEMBER.REGNAME;
    }

    @Override
    public Field<String> field3() {
        return Member.MEMBER.PWD;
    }

    @Override
    public Field<String> field4() {
        return Member.MEMBER.MOBILEPHONE;
    }

    @Override
    public Field<Byte> field5() {
        return Member.MEMBER.TYPE;
    }

    @Override
    public Field<Double> field6() {
        return Member.MEMBER.LEAVEAMOUNT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Member.MEMBER.REGTIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRegname();
    }

    @Override
    public String component3() {
        return getPwd();
    }

    @Override
    public String component4() {
        return getMobilephone();
    }

    @Override
    public Byte component5() {
        return getType();
    }

    @Override
    public Double component6() {
        return getLeaveamount();
    }

    @Override
    public LocalDateTime component7() {
        return getRegtime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRegname();
    }

    @Override
    public String value3() {
        return getPwd();
    }

    @Override
    public String value4() {
        return getMobilephone();
    }

    @Override
    public Byte value5() {
        return getType();
    }

    @Override
    public Double value6() {
        return getLeaveamount();
    }

    @Override
    public LocalDateTime value7() {
        return getRegtime();
    }

    @Override
    public MemberRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MemberRecord value2(String value) {
        setRegname(value);
        return this;
    }

    @Override
    public MemberRecord value3(String value) {
        setPwd(value);
        return this;
    }

    @Override
    public MemberRecord value4(String value) {
        setMobilephone(value);
        return this;
    }

    @Override
    public MemberRecord value5(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public MemberRecord value6(Double value) {
        setLeaveamount(value);
        return this;
    }

    @Override
    public MemberRecord value7(LocalDateTime value) {
        setRegtime(value);
        return this;
    }

    @Override
    public MemberRecord values(Integer value1, String value2, String value3, String value4, Byte value5, Double value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(Integer id, String regname, String pwd, String mobilephone, Byte type, Double leaveamount, LocalDateTime regtime) {
        super(Member.MEMBER);

        set(0, id);
        set(1, regname);
        set(2, pwd);
        set(3, mobilephone);
        set(4, type);
        set(5, leaveamount);
        set(6, regtime);
    }
}
