/*
 * This file is generated by jOOQ.
 */
package com.test.entity.tables.records;


import com.test.entity.tables.SysUser;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 系统用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUserRecord extends UpdatableRecordImpl<SysUserRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = -1256228819;

    /**
     * Setter for <code>test.sys_user.user_id</code>. 用户ID
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.sys_user.user_id</code>. 用户ID
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>test.sys_user.username</code>. 用户名
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.sys_user.username</code>. 用户名
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.sys_user.password</code>. 密码
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.sys_user.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.sys_user.salt</code>. 盐值
     */
    public void setSalt(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.sys_user.salt</code>. 盐值
     */
    public String getSalt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.sys_user.state</code>. 状态:NORMAL正常  PROHIBIT禁用
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.sys_user.state</code>. 状态:NORMAL正常  PROHIBIT禁用
     */
    public String getState() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysUser.SYS_USER.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return SysUser.SYS_USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return SysUser.SYS_USER.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return SysUser.SYS_USER.SALT;
    }

    @Override
    public Field<String> field5() {
        return SysUser.SYS_USER.STATE;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getSalt();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getSalt();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public SysUserRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public SysUserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public SysUserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public SysUserRecord value4(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public SysUserRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public SysUserRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysUserRecord
     */
    public SysUserRecord() {
        super(SysUser.SYS_USER);
    }

    /**
     * Create a detached, initialised SysUserRecord
     */
    public SysUserRecord(Long userId, String username, String password, String salt, String state) {
        super(SysUser.SYS_USER);

        set(0, userId);
        set(1, username);
        set(2, password);
        set(3, salt);
        set(4, state);
    }
}
