/*
 * This file is generated by jOOQ.
 */
package com.test.entity.tables.daos;


import com.test.entity.tables.TPermissions;
import com.test.entity.tables.records.TPermissionsRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPermissionsDao extends DAOImpl<TPermissionsRecord, com.test.entity.tables.pojos.TPermissions, String> {

    /**
     * Create a new TPermissionsDao without any configuration
     */
    public TPermissionsDao() {
        super(TPermissions.T_PERMISSIONS, com.test.entity.tables.pojos.TPermissions.class);
    }

    /**
     * Create a new TPermissionsDao with an attached configuration
     */
    public TPermissionsDao(Configuration configuration) {
        super(TPermissions.T_PERMISSIONS, com.test.entity.tables.pojos.TPermissions.class, configuration);
    }

    @Override
    public String getId(com.test.entity.tables.pojos.TPermissions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.TPermissions> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TPermissions.T_PERMISSIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.TPermissions> fetchById(String... values) {
        return fetch(TPermissions.T_PERMISSIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.test.entity.tables.pojos.TPermissions fetchOneById(String value) {
        return fetchOne(TPermissions.T_PERMISSIONS.ID, value);
    }

    /**
     * Fetch records that have <code>permissions_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.TPermissions> fetchRangeOfPermissionsName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TPermissions.T_PERMISSIONS.PERMISSIONS_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>permissions_name IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.TPermissions> fetchByPermissionsName(String... values) {
        return fetch(TPermissions.T_PERMISSIONS.PERMISSIONS_NAME, values);
    }
}
