/*
 * This file is generated by jOOQ.
 */
package com.test.entity.tables.daos;


import com.test.entity.tables.SysRole;
import com.test.entity.tables.records.SysRoleRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 角色表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRoleDao extends DAOImpl<SysRoleRecord, com.test.entity.tables.pojos.SysRole, Long> {

    /**
     * Create a new SysRoleDao without any configuration
     */
    public SysRoleDao() {
        super(SysRole.SYS_ROLE, com.test.entity.tables.pojos.SysRole.class);
    }

    /**
     * Create a new SysRoleDao with an attached configuration
     */
    public SysRoleDao(Configuration configuration) {
        super(SysRole.SYS_ROLE, com.test.entity.tables.pojos.SysRole.class, configuration);
    }

    @Override
    public Long getId(com.test.entity.tables.pojos.SysRole object) {
        return object.getRoleId();
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.SysRole> fetchRangeOfRoleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SysRole.SYS_ROLE.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.SysRole> fetchByRoleId(Long... values) {
        return fetch(SysRole.SYS_ROLE.ROLE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>role_id = value</code>
     */
    public com.test.entity.tables.pojos.SysRole fetchOneByRoleId(Long value) {
        return fetchOne(SysRole.SYS_ROLE.ROLE_ID, value);
    }

    /**
     * Fetch records that have <code>role_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.SysRole> fetchRangeOfRoleName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SysRole.SYS_ROLE.ROLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_name IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.SysRole> fetchByRoleName(String... values) {
        return fetch(SysRole.SYS_ROLE.ROLE_NAME, values);
    }
}
