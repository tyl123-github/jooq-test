/*
 * This file is generated by jOOQ.
 */
package com.test.entity.tables.daos;


import com.test.entity.tables.TUser;
import com.test.entity.tables.records.TUserRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUserDao extends DAOImpl<TUserRecord, com.test.entity.tables.pojos.TUser, Integer> {

    /**
     * Create a new TUserDao without any configuration
     */
    public TUserDao() {
        super(TUser.T_USER, com.test.entity.tables.pojos.TUser.class);
    }

    /**
     * Create a new TUserDao with an attached configuration
     */
    public TUserDao(Configuration configuration) {
        super(TUser.T_USER, com.test.entity.tables.pojos.TUser.class, configuration);
    }

    @Override
    public Integer getId(com.test.entity.tables.pojos.TUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.TUser> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TUser.T_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.TUser> fetchById(Integer... values) {
        return fetch(TUser.T_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.test.entity.tables.pojos.TUser fetchOneById(Integer value) {
        return fetchOne(TUser.T_USER.ID, value);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.TUser> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.TUser> fetchByUserName(String... values) {
        return fetch(TUser.T_USER.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>pass_word BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.test.entity.tables.pojos.TUser> fetchRangeOfPassWord(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.PASS_WORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pass_word IN (values)</code>
     */
    public List<com.test.entity.tables.pojos.TUser> fetchByPassWord(String... values) {
        return fetch(TUser.T_USER.PASS_WORD, values);
    }
}
